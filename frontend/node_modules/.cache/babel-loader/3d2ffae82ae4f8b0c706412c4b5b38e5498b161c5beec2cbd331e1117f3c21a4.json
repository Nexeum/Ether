{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srand\\\\Desktop\\\\JavaScript\\\\frontend\\\\src\\\\components\\\\KubeFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, Button, Spinner, Card } from \"flowbite-react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KubeFlow = () => {\n  _s();\n  const [containers, setContainers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showTable, setShowTable] = useState(false);\n  const scanContainers = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:5001/containers\");\n      return response.data;\n    } catch (error) {\n      console.error(error);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleScan = async () => {\n    const containers = await scanContainers();\n    setContainers(containers);\n    setShowTable(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full max-w-md p-8 space-y-4 rounded-xl shadow-md dark:bg-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n        children: \"Local Containers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 dark:text-gray-400\",\n        children: \"Click the button below to fetch the local containers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleScan,\n        color: \"light\",\n        className: \"flex items-center space-x-2\",\n        children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }, this) : \"Get containers\", /*#__PURE__*/_jsxDEV(\"svg\", {\n          class: \"w-6 h-6 text-gray-800 dark:text-white\",\n          \"aria-hidden\": \"true\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          fill: \"currentColor\",\n          viewBox: \"0 0 18 18\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M6.143 0H1.857A1.857 1.857 0 0 0 0 1.857v4.286C0 ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), showTable && /*#__PURE__*/_jsxDEV(Table, {\n        hoverable: true,\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"Port\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          className: \"divide-y\",\n          children: containers.map((container, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: container.Names\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: container.IP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: container.Port\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(KubeFlow, \"QwShWPUA1WcwGvgufaAIrmZ6FVE=\");\n_c = KubeFlow;\nvar _c;\n$RefreshReg$(_c, \"KubeFlow\");","map":{"version":3,"names":["React","useState","Table","Button","Spinner","Card","axios","jsxDEV","_jsxDEV","KubeFlow","_s","containers","setContainers","loading","setLoading","showTable","setShowTable","scanContainers","response","get","data","error","console","handleScan","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","class","xmlns","fill","viewBox","d","hoverable","Head","HeadCell","Body","map","container","index","Row","Cell","Names","IP","Port","_c","$RefreshReg$"],"sources":["C:/Users/srand/Desktop/JavaScript/frontend/src/components/KubeFlow.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Table, Button, Spinner, Card } from \"flowbite-react\";\r\nimport axios from \"axios\";\r\n\r\nexport const KubeFlow = () => {\r\n  const [containers, setContainers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showTable, setShowTable] = useState(false);\r\n\r\n  const scanContainers = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5001/containers\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleScan = async () => {\r\n    const containers = await scanContainers();\r\n    setContainers(containers);\r\n    setShowTable(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center h-screen\">\r\n      <Card className=\"w-full max-w-md p-8 space-y-4 rounded-xl shadow-md dark:bg-gray-800\">\r\n        <h2 className=\"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\r\n          Local Containers\r\n        </h2>\r\n        <p className=\"text-gray-500 dark:text-gray-400\">\r\n          Click the button below to fetch the local containers.\r\n        </p>\r\n        <Button onClick={handleScan} color=\"light\" className=\"flex items-center space-x-2\">\r\n          {loading ? <Spinner /> : \"Get containers\"}\r\n          <svg\r\n            class=\"w-6 h-6 text-gray-800 dark:text-white\"\r\n            aria-hidden=\"true\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 18 18\"\r\n          >\r\n            <path d=\"M6.143 0H1.857A1.857 1.857 0 0 0 0 1.857v4.286C0 ...\"/>\r\n          </svg>\r\n        </Button>\r\n\r\n        {showTable && (\r\n          <Table hoverable className=\"mt-4\">\r\n            <Table.Head>\r\n              <Table.HeadCell>Name</Table.HeadCell>\r\n              <Table.HeadCell>IP</Table.HeadCell>\r\n              <Table.HeadCell>Port</Table.HeadCell>\r\n            </Table.Head>\r\n            <Table.Body className=\"divide-y\">\r\n              {containers.map((container, index) => (\r\n                <Table.Row key={index}>\r\n                  <Table.Cell>{container.Names}</Table.Cell>\r\n                  <Table.Cell>{container.IP}</Table.Cell>\r\n                  <Table.Cell>{container.Port}</Table.Cell>\r\n                </Table.Row>\r\n              ))}\r\n            </Table.Body>\r\n          </Table>\r\n        )}\r\n      </Card>\r\n    </div>\r\n)};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}