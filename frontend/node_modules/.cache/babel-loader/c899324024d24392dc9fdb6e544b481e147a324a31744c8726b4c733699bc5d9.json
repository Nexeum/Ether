{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srand\\\\Desktop\\\\JavaScript\\\\frontend\\\\src\\\\components\\\\KubeSh.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KubeSh = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    event.preventDefault();\n    // Aquí puedes procesar el comando ingresado en el input\n    // Por ahora, simplemente agregamos el comando al output\n    setOutput(prevOutput => prevOutput + '\\n' + input);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-8\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full space-y-4 rounded-xl shadow-md dark:bg-gray-800\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n        children: \"Local Containers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 dark:text-gray-400\",\n        children: \"Click the button below to fetch the local containers.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleScan,\n        color: \"light\",\n        className: \"flex items-center space-x-2\",\n        children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 24\n        }, this) : \"Get containers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), showTable && /*#__PURE__*/_jsxDEV(Table, {\n        hoverable: true,\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Table.Head, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"IP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"Port\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeadCell, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          className: \"divide-y\",\n          children: containers.map((container, index) => /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: container.Names\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: container.IP\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: container.Port\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                color: getBadgeColor(container.Status),\n                children: container.Status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(KubeSh, \"DmRvfRMhZGwUzWaiGgNNzsVTO9w=\");\n_c = KubeSh;\nvar _c;\n$RefreshReg$(_c, \"KubeSh\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","KubeSh","_s","input","setInput","output","setOutput","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","prevOutput","className","children","Card","fileName","_jsxFileName","lineNumber","columnNumber","Button","onClick","handleScan","color","loading","Spinner","showTable","Table","hoverable","Head","HeadCell","Body","containers","map","container","index","Row","Cell","Names","IP","Port","Badge","getBadgeColor","Status","_c","$RefreshReg$"],"sources":["C:/Users/srand/Desktop/JavaScript/frontend/src/components/KubeSh.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport const KubeSh = () => {\r\n  const [input, setInput] = useState('');\r\n  const [output, setOutput] = useState('');\r\n\r\n  const handleInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleCommandSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Aquí puedes procesar el comando ingresado en el input\r\n    // Por ahora, simplemente agregamos el comando al output\r\n    setOutput((prevOutput) => prevOutput + '\\n' + input);\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-8\">\r\n        <Card className=\"w-full space-y-4 rounded-xl shadow-md dark:bg-gray-800\">\r\n          <h2 className=\"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\r\n            Local Containers\r\n          </h2>\r\n          <p className=\"text-gray-500 dark:text-gray-400\">\r\n            Click the button below to fetch the local containers.\r\n          </p>\r\n          <Button onClick={handleScan} color=\"light\" className=\"flex items-center space-x-2\">\r\n            {loading ? <Spinner /> : \"Get containers\"}\r\n          </Button>\r\n  \r\n          {showTable && (\r\n            <Table hoverable className=\"mt-4\">\r\n              <Table.Head>\r\n                <Table.HeadCell>Name</Table.HeadCell>\r\n                <Table.HeadCell>IP</Table.HeadCell>\r\n                <Table.HeadCell>Port</Table.HeadCell>\r\n                <Table.HeadCell>Status</Table.HeadCell>\r\n              </Table.Head>\r\n              <Table.Body className=\"divide-y\">\r\n                {containers.map((container, index) => (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{container.Names}</Table.Cell>\r\n                    <Table.Cell>{container.IP}</Table.Cell>\r\n                    <Table.Cell>{container.Port}</Table.Cell>\r\n                    <Table.Cell><Badge color={getBadgeColor(container.Status)}>{container.Status}</Badge></Table.Cell>\r\n                  </Table.Row>\r\n                ))}\r\n              </Table.Body>\r\n            </Table>\r\n          )}\r\n        </Card>\r\n      </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnCJ,QAAQ,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB;IACA;IACAN,SAAS,CAAEO,UAAU,IAAKA,UAAU,GAAG,IAAI,GAAGV,KAAK,CAAC;IACpDC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEJ,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9Bf,OAAA,CAACgB,IAAI;MAACF,SAAS,EAAC,wDAAwD;MAAAC,QAAA,gBACtEf,OAAA;QAAIc,SAAS,EAAC,iEAAiE;QAAAC,QAAA,EAAC;MAEhF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLpB,OAAA;QAAGc,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAEhD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJpB,OAAA,CAACqB,MAAM;QAACC,OAAO,EAAEC,UAAW;QAACC,KAAK,EAAC,OAAO;QAACV,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAC/EU,OAAO,gBAAGzB,OAAA,CAAC0B,OAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAAG;MAAgB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EAERO,SAAS,iBACR3B,OAAA,CAAC4B,KAAK;QAACC,SAAS;QAACf,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC/Bf,OAAA,CAAC4B,KAAK,CAACE,IAAI;UAAAf,QAAA,gBACTf,OAAA,CAAC4B,KAAK,CAACG,QAAQ;YAAAhB,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC,eACrCpB,OAAA,CAAC4B,KAAK,CAACG,QAAQ;YAAAhB,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC,eACnCpB,OAAA,CAAC4B,KAAK,CAACG,QAAQ;YAAAhB,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC,eACrCpB,OAAA,CAAC4B,KAAK,CAACG,QAAQ;YAAAhB,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAgB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACbpB,OAAA,CAAC4B,KAAK,CAACI,IAAI;UAAClB,SAAS,EAAC,UAAU;UAAAC,QAAA,EAC7BkB,UAAU,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC/BpC,OAAA,CAAC4B,KAAK,CAACS,GAAG;YAAAtB,QAAA,gBACRf,OAAA,CAAC4B,KAAK,CAACU,IAAI;cAAAvB,QAAA,EAAEoB,SAAS,CAACI;YAAK;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAC1CpB,OAAA,CAAC4B,KAAK,CAACU,IAAI;cAAAvB,QAAA,EAAEoB,SAAS,CAACK;YAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACvCpB,OAAA,CAAC4B,KAAK,CAACU,IAAI;cAAAvB,QAAA,EAAEoB,SAAS,CAACM;YAAI;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eACzCpB,OAAA,CAAC4B,KAAK,CAACU,IAAI;cAAAvB,QAAA,eAACf,OAAA,CAAC0C,KAAK;gBAAClB,KAAK,EAAEmB,aAAa,CAACR,SAAS,CAACS,MAAM,CAAE;gBAAA7B,QAAA,EAAEoB,SAAS,CAACS;cAAM;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC;UAAA,GAJpFgB,KAAK;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKV,CACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAAClB,EAAA,CApDWD,MAAM;AAAA4C,EAAA,GAAN5C,MAAM;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}