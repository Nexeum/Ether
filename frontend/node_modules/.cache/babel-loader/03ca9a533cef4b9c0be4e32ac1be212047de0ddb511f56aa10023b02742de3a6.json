{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srand\\\\Desktop\\\\JavaScript\\\\frontend\\\\src\\\\components\\\\KubeSh.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { Textarea, Card, TextInput } from \"flowbite-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KubeSh = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"C:/\");\n  const outputEndRef = useRef(null);\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  };\n  const handleCommandSubmit = event => {\n    event.preventDefault();\n    // Aquí puedes procesar el comando ingresado en el input\n    if (input === \"help\") {\n      setOutput(prevOutput => prevOutput + \"\\n\" + \"Comandos de ayuda: \\n- comando1: hace esto \\n- comando2: hace aquello\");\n    } else {\n      // Por ahora, simplemente agregamos el comando al output\n      setOutput(prevOutput => prevOutput + \"\\nC:/\" + input);\n    }\n    setInput(\"\");\n  };\n\n  // Esta función se encarga de hacer scroll hasta el final del output cada vez que cambia\n  useEffect(() => {\n    outputEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [output]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-8\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"w-full space-y-4 rounded-xl shadow-md dark:bg-gray-800\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 w-full h-64 bg-black text-white overflow-auto p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap\",\n          children: output\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCommandSubmit,\n          children: /*#__PURE__*/_jsxDEV(TextInput, {\n            type: \"text\",\n            value: input,\n            onChange: handleInputChange,\n            className: \"w-full bg-black text-white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: outputEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(KubeSh, \"+8hL3Lz2fiIkLgTYkNX+Gz7WFsY=\");\n_c = KubeSh;\nvar _c;\n$RefreshReg$(_c, \"KubeSh\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Textarea","Card","TextInput","jsxDEV","_jsxDEV","KubeSh","_s","input","setInput","output","setOutput","outputEndRef","handleInputChange","event","target","value","handleCommandSubmit","preventDefault","prevOutput","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","ref","_c","$RefreshReg$"],"sources":["C:/Users/srand/Desktop/JavaScript/frontend/src/components/KubeSh.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Textarea, Card, TextInput  } from \"flowbite-react\";\r\n\r\nexport const KubeSh = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [output, setOutput] = useState(\"C:/\");\r\n  const outputEndRef = useRef(null);\r\n\r\n  const handleInputChange = (event) => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleCommandSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Aquí puedes procesar el comando ingresado en el input\r\n    if (input === \"help\") {\r\n      setOutput((prevOutput) => prevOutput + \"\\n\" + \"Comandos de ayuda: \\n- comando1: hace esto \\n- comando2: hace aquello\");\r\n    } else {\r\n      // Por ahora, simplemente agregamos el comando al output\r\n      setOutput((prevOutput) => prevOutput + \"\\nC:/\" + input);\r\n    }\r\n    setInput(\"\");\r\n  };\r\n\r\n  // Esta función se encarga de hacer scroll hasta el final del output cada vez que cambia\r\n  useEffect(() => {\r\n    outputEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [output]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-8\">\r\n      <Card className=\"w-full space-y-4 rounded-xl shadow-md dark:bg-gray-800\">\r\n        <div className=\"mb-4 w-full h-64 bg-black text-white overflow-auto p-4\">\r\n          <pre className=\"whitespace-pre-wrap\">{output}</pre>\r\n          <form onSubmit={handleCommandSubmit}>\r\n            <TextInput \r\n              type=\"text\"\r\n              value={input}\r\n              onChange={handleInputChange}\r\n              className=\"w-full bg-black text-white\"\r\n            />\r\n          </form>\r\n          <div ref={outputEndRef}></div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,QAAQ,EAAEC,IAAI,EAAEC,SAAS,QAAS,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMc,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMc,iBAAiB,GAAIC,KAAK,IAAK;IACnCL,QAAQ,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,KAAK,IAAK;IACrCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB;IACA,IAAIV,KAAK,KAAK,MAAM,EAAE;MACpBG,SAAS,CAAEQ,UAAU,IAAKA,UAAU,GAAG,IAAI,GAAG,uEAAuE,CAAC;IACxH,CAAC,MAAM;MACL;MACAR,SAAS,CAAEQ,UAAU,IAAKA,UAAU,GAAG,OAAO,GAAGX,KAAK,CAAC;IACzD;IACAC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACdY,YAAY,CAACQ,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACZ,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAKkB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCnB,OAAA,CAACH,IAAI;MAACqB,SAAS,EAAC,wDAAwD;MAAAC,QAAA,eACtEnB,OAAA;QAAKkB,SAAS,EAAC,wDAAwD;QAAAC,QAAA,gBACrEnB,OAAA;UAAKkB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAEd;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACnDvB,OAAA;UAAMwB,QAAQ,EAAEZ,mBAAoB;UAAAO,QAAA,eAClCnB,OAAA,CAACF,SAAS;YACR2B,IAAI,EAAC,MAAM;YACXd,KAAK,EAAER,KAAM;YACbuB,QAAQ,EAAElB,iBAAkB;YAC5BU,SAAS,EAAC;UAA4B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACPvB,OAAA;UAAK2B,GAAG,EAAEpB;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CA5CWD,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}