{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srand\\\\Desktop\\\\JavaScript\\\\frontend\\\\src\\\\components\\\\ContainerDetails.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"flowbite-react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Chart, PieController, ArcElement, LinearScale, Title, CategoryScale } from \"chart.js\";\n\n// Register the controllers\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(PieController, ArcElement, LinearScale, Title, CategoryScale);\nconst useMetrics = id => {\n  _s();\n  const [metrics, setMetrics] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMetrics = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/container/${id}/metrics`);\n        console.log(response.data);\n        setMetrics(response.data);\n      } catch (error) {\n        console.error(error);\n        setError(\"Error fetching metrics. Please try again.\");\n      }\n    };\n\n    // Fetch metrics every second\n    const intervalId = setInterval(fetchMetrics, 1000);\n\n    // Clear interval on unmount\n    return () => clearInterval(intervalId);\n  }, [id]);\n  return {\n    metrics,\n    error\n  };\n};\n_s(useMetrics, \"pv+3TIh8tFgccfNOjodi2B428iM=\");\nexport const ContainerDetails = () => {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const {\n    metrics,\n    error\n  } = useMetrics(id);\n  const [cpuChart, setCpuChart] = useState(null);\n  const [memChart, setMemChart] = useState(null);\n  useEffect(() => {\n    if (metrics) {\n      // If the charts have not been created yet, create them\n      if (!cpuChart) {\n        const cpuCtx = document.getElementById(\"cpuChart\").getContext(\"2d\");\n        setCpuChart(new Chart(cpuCtx));\n      }\n      if (!memChart) {\n        const memCtx = document.getElementById(\"memChart\").getContext(\"2d\");\n        setMemChart(new Chart(memCtx));\n      }\n\n      // Update chart data\n      cpuChart.data = {\n        labels: [\"CPUPerc\"],\n        datasets: [{\n          label: \"CPU Usage\",\n          data: [parseFloat(metrics.CPUPerc)],\n          backgroundColor: [\"rgb(255, 99, 132)\"]\n        }]\n      };\n      cpuChart.update();\n      memChart.data = {\n        labels: [\"MemPerc\"],\n        datasets: [{\n          label: \"Memory Usage\",\n          data: [parseFloat(metrics.MemPerc)],\n          backgroundColor: [\"rgb(54, 162, 235)\"]\n        }]\n      };\n      const memCtx = document.getElementById(\"memChart\").getContext(\"2d\");\n      const newMemChart = new Chart(memCtx, {\n        type: \"pie\",\n        data: {\n          labels: [\"MemPerc\"],\n          datasets: [{\n            label: \"Memory Usage\",\n            data: [parseFloat(metrics.MemPerc)],\n            backgroundColor: [\"rgb(54, 162, 235)\"]\n          }]\n        }\n      });\n    }\n  }, [metrics]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n          children: [id, \" - CPU Usage\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"cpuChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"w-full max-w-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\",\n          children: [id, \" - Memory Usage\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"memChart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s2(ContainerDetails, \"83IP0GyCAut81fcj60LjI7uRWv4=\", false, function () {\n  return [useParams, useMetrics];\n});\n_c = ContainerDetails;\nvar _c;\n$RefreshReg$(_c, \"ContainerDetails\");","map":{"version":3,"names":["React","useEffect","useState","Card","useParams","axios","Chart","PieController","ArcElement","LinearScale","Title","CategoryScale","jsxDEV","_jsxDEV","register","useMetrics","id","_s","metrics","setMetrics","error","setError","fetchMetrics","response","get","console","log","data","intervalId","setInterval","clearInterval","ContainerDetails","_s2","cpuChart","setCpuChart","memChart","setMemChart","cpuCtx","document","getElementById","getContext","memCtx","labels","datasets","label","parseFloat","CPUPerc","backgroundColor","update","MemPerc","newMemChart","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srand/Desktop/JavaScript/frontend/src/components/ContainerDetails.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"flowbite-react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Chart,\r\n  PieController,\r\n  ArcElement,\r\n  LinearScale,\r\n  Title,\r\n  CategoryScale,\r\n} from \"chart.js\";\r\n\r\n// Register the controllers\r\nChart.register(PieController, ArcElement, LinearScale, Title, CategoryScale);\r\n\r\nconst useMetrics = (id) => {\r\n  const [metrics, setMetrics] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMetrics = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n            `http://localhost:5001/container/${id}/metrics`\r\n        );\r\n        console.log(response.data);\r\n        setMetrics(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(\"Error fetching metrics. Please try again.\");\r\n      }\r\n    };\r\n\r\n    // Fetch metrics every second\r\n    const intervalId = setInterval(fetchMetrics, 1000);\r\n\r\n    // Clear interval on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, [id]);\r\n\r\n  return { metrics, error };\r\n};\r\n\r\nexport const ContainerDetails = () => {\r\n  const { id } = useParams();\r\n  const { metrics, error } = useMetrics(id);\r\n  const [cpuChart, setCpuChart] = useState(null);\r\n  const [memChart, setMemChart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (metrics) {\r\n      // If the charts have not been created yet, create them\r\n      if (!cpuChart) {\r\n        const cpuCtx = document.getElementById(\"cpuChart\").getContext(\"2d\");\r\n        setCpuChart(new Chart(cpuCtx));\r\n      }\r\n\r\n      if (!memChart) {\r\n        const memCtx = document.getElementById(\"memChart\").getContext(\"2d\");\r\n        setMemChart(new Chart(memCtx));\r\n      }\r\n\r\n      // Update chart data\r\n      cpuChart.data = {\r\n        labels: [\"CPUPerc\"],\r\n        datasets: [\r\n          {\r\n            label: \"CPU Usage\",\r\n            data: [parseFloat(metrics.CPUPerc)],\r\n            backgroundColor: [\"rgb(255, 99, 132)\"],\r\n          },\r\n        ],\r\n      };\r\n      cpuChart.update();\r\n\r\n      memChart.data = {\r\n        labels: [\"MemPerc\"],\r\n        datasets: [\r\n          {\r\n            label: \"Memory Usage\",\r\n            data: [parseFloat(metrics.MemPerc)],\r\n            backgroundColor: [\"rgb(54, 162, 235)\"],\r\n          },\r\n        ],\r\n      };\r\n      const memCtx = document.getElementById(\"memChart\").getContext(\"2d\");\r\n      const newMemChart = new Chart(memCtx, {\r\n        type: \"pie\",\r\n        data: {\r\n          labels: [\"MemPerc\"],\r\n          datasets: [\r\n            {\r\n              label: \"Memory Usage\",\r\n              data: [parseFloat(metrics.MemPerc)],\r\n              backgroundColor: [\"rgb(54, 162, 235)\"],\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n  }, [metrics]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col p-8\">\r\n      <div className=\"flex space-x-4\">\r\n        <Card className=\"w-full max-w-sm\">\r\n          <h2 className=\"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\r\n            {id} - CPU Usage\r\n          </h2>\r\n          <canvas id=\"cpuChart\"></canvas>\r\n        </Card>\r\n        <Card className=\"w-full max-w-sm\">\r\n          <h2 className=\"text-2xl font-bold tracking-tight text-gray-900 dark:text-white\">\r\n            {id} - Memory Usage\r\n          </h2>\r\n          <canvas id=\"memChart\"></canvas>\r\n        </Card>\r\n      </div>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}